apiServer:
  deployment:
    envoy:
      image:
        pullPolicy: IfNotPresent
        repository: grpcserver-envoy
        tag: 0.20.8
    server:
      grpcPort: 10101
      image:
        pullPolicy: IfNotPresent
        repository: grpcserver-ee
        tag: 0.20.8
      oauth:
        client: ""
        server: ""
    ui:
      image:
        pullPolicy: IfNotPresent
        repository: grpcserver-ui
        tag: 0.20.8
      staticPort: 8080
  enable: true
  enableBeta: true
  enterprise: true
  service:
    name: apiserver-ui
global:
  extensions:
    extAuth:
      deployment:
        image:
          pullPolicy: IfNotPresent
          repository: extauth-ee
          tag: 0.20.8
        name: extauth
        port: 8083
        stats: true
      enabled: true
      envoySidecar: false
      service:
        name: extauth
        port: 8083
      serviceName: ext-auth
      signingKey:
        name: extauth-signing-key
        signing-key: ""
      standaloneDeployment: true
      userIdHeader: x-user-id
  glooRbac:
    Namespaced: false
    create: true
  image:
    pullPolicy: IfNotPresent
    pullSecret: solo-io-readerbot-pull-secret
    registry: quay.io/solo-io
gloo:
  discovery:
    deployment:
      floatingUserId: false
      image:
        pullPolicy: IfNotPresent
        registry: quay.io/solo-io
        repository: discovery
        tag: 0.20.13
      runAsUser: 10101
      stats: false
    enabled: true
    fdsMode: ""
  gateway:
    certGenJob:
      image:
        pullPolicy: IfNotPresent
        registry: quay.io/solo-io
        repository: certgen
        tag: 0.20.13
      restartPolicy: OnFailure
    conversionJob:
      image:
        repository: gateway-conversion
      restartPolicy: Never
    deployment:
      floatingUserId: false
      image:
        pullPolicy: IfNotPresent
        registry: quay.io/solo-io
        repository: gateway
        tag: 0.20.13
      runAsUser: 10101
      stats: false
    enabled: true
    proxyServiceAccount:
      disableAutomount: false
    updateValues: true
    upgrade: null
    validation:
      alwaysAcceptResources: true
      failurePolicy: Ignore
      secretName: gateway-validation-certs
  gatewayProxies:
    gatewayProxyV2:
      extraInitContainersHelper: ""
      extraVolumeHelper: ""
      kind:
        deployment:
          antiAffinity: false
          replicas: 1
          resources: null
      podTemplate:
        disableNetBind: false
        floatingUserId: false
        httpPort: 8080
        httpsPort: 8443
        image:
          pullPolicy: IfNotPresent
          repository: gloo-ee-envoy-wrapper
          tag: 0.20.8
        probes: false
        resources: null
        runAsUser: 0
        runUnprivileged: false
        tolerations: null
      readConfig: false
      service:
        extraAnnotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "8081"
          prometheus.io/scrape: "true"
        httpPort: 80
        httpsPort: 443
        type: LoadBalancer
      stats: true
  gloo:
    deployment:
      floatingUserId: false
      image:
        pullPolicy: IfNotPresent
        repository: gloo-ee
        tag: 0.20.8
      replicas: 1
      resources: null
      runAsUser: 10101
      stats: true
      validationPort: 9988
      xdsPort: 9977
  settings:
    create: false
    singleNamespace: false
grafana:
  adminPassword: admin
  adminUser: admin
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - disableDeletion: false
        editable: true
        folder: gloo
        name: gloo
        options:
          path: /var/lib/grafana/dashboards/gloo
        orgId: 1
        type: file
  dashboardsConfigMaps:
    gloo: glooe-grafana-custom-dashboards
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - access: proxy
        isDefault: true
        name: gloo
        type: prometheus
        url: http://glooe-prometheus-server:80
  defaultInstallationEnabled: true
  fullnameOverride: glooe-grafana
  nameOverride: glooe-grafana
  persistence:
    enabled: true
    size: 100Mi
  rbac:
    pspUseAppArmor: false
observability:
  customGrafana:
    apiKey: ""
    enabled: false
    password: ""
    url: ""
    username: ""
  deployment:
    image:
      pullPolicy: IfNotPresent
      repository: observability-ee
      tag: 0.20.8
  enabled: true
  upstreamDashboardTemplate: ""
prometheus:
  alertmanager:
    enabled: false
  enabled: true
  kubeStateMetrics:
    fullnameOverride: glooe-prometheus-kube-state-metrics
  nameOverride: glooe-prometheus
  nodeExporter:
    enabled: false
  pushgateway:
    enabled: false
  server:
    fullnameOverride: glooe-prometheus-server
    global:
      evaluation_interval: 10s
      scrape_interval: 10s
    persistentVolume:
      size: 16Gi
rateLimit:
  deployment:
    dynamodb:
      batchSize: 100
      consistentReads: true
      region: us-east-2
      tableName: rate-limits
    glooAddress: gloo:9977
    image:
      pullPolicy: IfNotPresent
      repository: rate-limit-ee
      tag: 0.20.8
    redisUrl: redis:6379
  enabled: true
  service:
    name: rate-limit
    port: 18081
rbac:
  create: false
redis:
  deployment:
    image:
      pullPolicy: IfNotPresent
      registry: docker.io
      repository: redis
      tag: "5"
    staticPort: 6379
  service:
    name: redis
    port: 6379
settings:
  create: true
  singleNamespace: false
